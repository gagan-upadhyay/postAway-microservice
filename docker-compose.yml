version: '3.8'
services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - ${AUTH_SERVICE_PORT}:5000
    environment:
      - MONGO_URI=${AUTH_MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo
  

  post-service:
    build: 
      context: ./post-service
      dockerfile: Dockerfile
    ports:
      - "${POST_SERVICE_PORT}:5001"
    environment:
      - MONGO_URI=${POST_MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo

  user-service:
    build:
    context: ./post-service
    dockerfile: Dockerfile
    ports:
      - "${USER_SERVICE_PORT}:5002"
    environment:
      - MONGO_URI=${USER_MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongo
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      - ZOOKEEPER_CLIENT_PORT:2181
      - ZOOKEEPER_TICK_TIME:2000
  
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      -"9092:9092"
    environment:
      - KAFKA_BROKER_ID: 1
      - KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      -"6060:6060"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTER_0_NAME=local
      - KAFKA_CLUSTER_0_BOOTSTRAPSERVERS=kafka:9092

  mongo:
    image: mongo
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
